name: CI

on:
  workflow_call:
  push:
  pull_request:

# Declare default permissions as read only.
permissions: read-all

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: "1.24.2"
      - run: make test
      - name: Upload unit-tests coverage to Codecov
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          name: unit-tests
          directory: coverage
          flags: unit-tests
          verbose: true

  helm-unittest:
    name: Helm unittest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Install helm
        uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4.3.0
      - name: Install Helm-unittest
        run: helm plugin install https://github.com/helm-unittest/helm-unittest
      - run: make helm-unittest

  golangci:
    name: Golangci-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: "1.24.1"
      - name: golangci-lint
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
        with:
          version: v2.1.6

  commitlint:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - name: Discover latest version of commitlint
        id: discover-commitlint-version
        run: |
          latest_version=$(curl -s https://api.github.com/repos/conventional-changelog/commitlint/releases/latest | jq -r '.tag_name')
          echo "version=$latest_version" >> $GITHUB_OUTPUT
        shell: bash
      - name: Cache commitlint
        id: cache-commitlint
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: |
            node_modules
            package.json
            package-lock.json
          key: ${{ runner.os }}-commitlint-${{ steps.discover-commitlint-version.outputs.version }}
      - name: Install commitlint
        if: steps.cache-commitlint.outputs.cache-hit != 'true'
        run: npm install -D @commitlint/cli @commitlint/config-conventional
      - name: Print versions
        run: |
          git --version
          node --version
          npm --version
          npx commitlint --version
      - name: Validate PR commits with commitlint
        run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose
