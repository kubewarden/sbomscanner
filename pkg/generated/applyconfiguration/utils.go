// Code generated by applyconfiguration-gen. DO NOT EDIT.

package applyconfiguration

import (
	v1alpha1 "github.com/rancher/sbombastic/api/storage/v1alpha1"
	internal "github.com/rancher/sbombastic/pkg/generated/applyconfiguration/internal"
	storagev1alpha1 "github.com/rancher/sbombastic/pkg/generated/applyconfiguration/storage/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	schema "k8s.io/apimachinery/pkg/runtime/schema"
	managedfields "k8s.io/apimachinery/pkg/util/managedfields"
)

// ForKind returns an apply configuration type for the given GroupVersionKind, or nil if no
// apply configuration type exists for the given GroupVersionKind.
func ForKind(kind schema.GroupVersionKind) interface{} {
	switch kind {
	// Group=storage.sbombastic.rancher.io, Version=v1alpha1
	case v1alpha1.SchemeGroupVersion.WithKind("CVSS"):
		return &storagev1alpha1.CVSSApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("Image"):
		return &storagev1alpha1.ImageApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("ImageLayer"):
		return &storagev1alpha1.ImageLayerApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("ImageMetadata"):
		return &storagev1alpha1.ImageMetadataApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("ImageSpec"):
		return &storagev1alpha1.ImageSpecApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("Report"):
		return &storagev1alpha1.ReportApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("Result"):
		return &storagev1alpha1.ResultApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("SBOM"):
		return &storagev1alpha1.SBOMApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("SBOMSpec"):
		return &storagev1alpha1.SBOMSpecApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("VEXStatus"):
		return &storagev1alpha1.VEXStatusApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("Vulnerability"):
		return &storagev1alpha1.VulnerabilityApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("VulnerabilityReport"):
		return &storagev1alpha1.VulnerabilityReportApplyConfiguration{}
	case v1alpha1.SchemeGroupVersion.WithKind("VulnerabilityReportSpec"):
		return &storagev1alpha1.VulnerabilityReportSpecApplyConfiguration{}

	}
	return nil
}

func NewTypeConverter(scheme *runtime.Scheme) managedfields.TypeConverter {
	return managedfields.NewSchemeTypeConverter(scheme, internal.Parser())
}
